import subprocess

def run_command_shell(cmd):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç shell-–∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - stdout: –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã (–≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏)
    - stderr: –æ—à–∏–±–∫–∏ (–≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏)
    - returncode: –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ (0 ‚Äî —É—Å–ø–µ—Ö)
    """
    result = subprocess.run(cmd, shell=True, capture_output=True)

    encodings = ['utf-8', 'cp1251', 'latin-1']
    stdout = ""
    stderr = ""

    for enc in encodings:
        try:
            stdout = result.stdout.decode(enc)
            break
        except (UnicodeDecodeError, LookupError):
            continue
    else:
        stdout = result.stdout.decode('utf-8', errors='replace')

    for enc in encodings:
        try:
            stderr = result.stderr.decode(enc)
            break
        except (UnicodeDecodeError, LookupError):
            continue
    else:
        stderr = result.stderr.decode('utf-8', errors='replace')

    return stdout, stderr, result.returncode

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º...")

    _, _, code = run_command_shell("git status")
    if code != 0:
        print("‚ùå –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º.")
        return

    print("üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å GitHub...")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    out, err, code = run_command_shell("git fetch")
    if code != 0:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ 'git fetch':\n{err}")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
    current_branch_out, err, code = run_command_shell("git branch --show-current")
    if code != 0:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–º—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏:\n{err}")
        return

    current_branch = current_branch_out.strip()
    if not current_branch:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –ª–∏ –ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞ –æ—Ç —É–¥–∞–ª—ë–Ω–Ω–æ–π
    # git status --porcelain=2 --branch –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä: # branch.ab +3 -0
    out, err, code = run_command_shell("git status --porcelain=2 --branch")

    if code != 0:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:\n{err}")
        return

    has_updates = False
    for line in out.splitlines():
        if line.startswith("# branch"):
            if "+0 -0" not in line:
                has_updates = True
                break

    if has_updates:
        print("üì• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ GitHub.")
        print(f"üí° –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —Å–ª–∏—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ 'origin/{current_branch}' –≤ '{current_branch}'.")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –∏ —É–¥–∞–ª—ë–Ω–Ω–æ–π –≤–µ—Ç–∫–æ–π
        diff_cmd = f"git diff --name-status HEAD origin/{current_branch}"
        diff_out, diff_err, diff_code = run_command_shell(diff_cmd)

        if diff_code != 0:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:\n{diff_err}")
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫
            # –ù–æ –ù–ï –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ diff –Ω–µ —É–¥–∞–ª—Å—è
            confirm = input("\n‚úÖ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤. –í—Å—ë —Ä–∞–≤–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è? (y/N): ").strip().lower()
            if confirm != 'y':
                print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
                return
        else:
            if diff_out.strip():
                print("\nüìù –§–∞–π–ª—ã, –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ –Ω–∞ GitHub (–ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ª–æ–∫–∞–ª—å–Ω–æ):")
                print(diff_out)
                confirm = input("\n‚úÖ –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π? (y/N): ").strip().lower()
                if confirm != 'y':
                    print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
                    return
            else:
                # –ï—Å–ª–∏ git diff –Ω–µ –≤–µ—Ä–Ω—É–ª —Ñ–∞–π–ª–æ–≤, –Ω–æ git status –ø–æ–∫–∞–∑–∞–ª +X -Y, —ç—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ.
                # –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–º–∏—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, rebase).
                print("\nüìù –ù–µ—Ç —Ä–∞–∑–ª–∏—á–∏–π –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º —Ñ–∞–π–ª–æ–≤ –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –∏ —É–¥–∞–ª—ë–Ω–Ω–æ–π –≤–µ—Ç–∫–æ–π (—Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–º–∏—Ç–æ–≤).")
                confirm = input("\n‚úÖ –í—Å—ë —Ä–∞–≤–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å 'git pull' –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏? (y/N): ").strip().lower()
                if confirm != 'y':
                    print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
                    return

        print("üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º 'git pull'...")
        out, err, code = run_command_shell("git pull")
        if code != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ 'git pull':\n{err}")
            print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –µ—Å—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å–ª–∏—è–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∏—Ö –≤—Ä—É—á–Ω—É—é.")
            return

        print(f"üì• –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:\n{out}")
    else:
        print("‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ GitHub ‚Äî –ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–∞.")

if __name__ == "__main__":
    main()